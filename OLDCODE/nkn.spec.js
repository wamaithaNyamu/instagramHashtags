// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('nkn', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').usingServer('http://localhost:4444/wd/hub').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  async function waitForWindow(timeout = 2) {
    await driver.sleep(timeout)
    const handlesThen = vars["windowHandles"]
    const handlesNow = await driver.getAllWindowHandles()
    if (handlesNow.length > handlesThen.length) {
      return handlesNow.find(handle => (!handlesThen.includes(handle)))
    }
    throw new Error("New window did not appear before timeout")
  }
  it('nkn', async function() {
    // Test name: nkn
    // Step # | name | target | value
    // 1 | open | /explore/tags/shoes/ | 
    await driver.get("https://www.instagram.com/explore/tags/shoes/")
    // 2 | setWindowSize | 945x1020 | 
    await driver.manage().window().setRect(945, 1020)
    // 3 | click | css=.eyXLr | 
    await driver.findElement(By.css(".eyXLr")).click()
    // 4 | type | css=.XTCLo | #shoes
    vars["windowHandles"] = await driver.getAllWindowHandles()
    // 5 | mouseDownAt | css=.fuqBx | 223,108
    await driver.findElement(By.css(".XTCLo")).sendKeys("#shoes")
    // 6 | mouseMoveAt | css=.fuqBx | 223,108
    vars["win3865"] = await waitForWindow(2000)
    // 7 | mouseUpAt | css=.fuqBx | 223,108
    {
      const element = await driver.findElement(By.css(".fuqBx"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    // 8 | storeWindowHandle | root | 
    {
      const element = await driver.findElement(By.css(".fuqBx"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 9 | selectWindow | handle=${win3865} | 
    {
      const element = await driver.findElement(By.css(".fuqBx"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    // 10 | close |  | 
    vars["root"] = await driver.getWindowHandle()
    // 11 | selectWindow | handle=${root} | 
    await driver.switchTo().window(vars["win3865"])
    // 12 | selectWindow | handle=${win376} | 
    await driver.close()
    // 13 | close |  | 
    await driver.switchTo().window(vars["root"])
    // 14 | selectWindow | handle=${root} | 
    await driver.switchTo().window(vars["win376"])
    // 15 | selectWindow | handle=${win6669} | 
    await driver.close()
    // 16 | close |  | 
    await driver.switchTo().window(vars["root"])
    // 17 | selectWindow | handle=${root} | 
    await driver.switchTo().window(vars["win6669"])
    // 18 | close |  | 
    await driver.close()
    // 19 | click | css=.HoLwm | 
    await driver.switchTo().window(vars["root"])
    // 20 | click | css=.eyXLr | 
    await driver.close()
    // 21 | click | css=.jLwSh | 
    await driver.findElement(By.css(".HoLwm")).click()
    // 22 | click | css=.Fifk5 .\_6q-tv | 
    await driver.findElement(By.css(".eyXLr")).click()
    // 23 | click | css=.TqC_a | 
    await driver.findElement(By.css(".jLwSh")).click()
    // 24 | type | css=.XTCLo | #shoes
    await driver.findElement(By.css(".Fifk5 .\\_6q-tv")).click()
    // 25 | storeText | css=.JvDyy .uyeeR | text1
    await driver.findElement(By.css(".TqC_a")).click()
    // 26 | storeText | css=.JvDyy span > span | text2
    await driver.findElement(By.css(".XTCLo")).sendKeys("#shoes")
    // 27 | storeText | css=.JvDyy .Ap253 | textlast
    vars["text1"] = await driver.findElement(By.css(".JvDyy .uyeeR")).getText()
    // 28 | close |  | 
    vars["text2"] = await driver.findElement(By.css(".JvDyy span > span")).getText()
    vars["textlast"] = await driver.findElement(By.css(".JvDyy .Ap253")).getText()
    await driver.close()
  })
})
